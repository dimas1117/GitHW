{
	"info": {
		"_postman_id": "0de1e49d-72aa-4e63-a5fb-a5cced93d800",
		"name": "Group_28_Dimas_HW1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get_method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\" 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Dima\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=Dima&age=29",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "29"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"\r",
							"pm.test(\"name_resp\", function () {\r",
							"     pm.expect(resp_Data.name).to.eql(\"Dimas\");\r",
							"});\r",
							"pm.test(\"age_resp\", function () {\r",
							"   \r",
							"    pm.expect(+resp_Data.age).to.eql(29);\r",
							"});\r",
							"pm.test(\"salary_resp\", function () {\r",
							"    \r",
							"    pm.expect(+resp_Data.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"var req_Data = request.data ;\r",
							"\r",
							"pm.test(\"name_resp=name_req\", function () {\r",
							"   pm.expect(resp_Data.name).to.eql(req_Data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"age_resp=age_req\", function () {\r",
							"   pm.expect(resp_Data.age).to.eql(req_Data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_resp=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary).to.eql(+req_Data.salary);\r",
							"});\r",
							"console.log(\"family from resp = \", resp_Data.family)\r",
							"\r",
							"pm.test(\"salary_1.5_year=salary*4\", function () {\r",
							" pm.expect(resp_Data.family.u_salary_1_5_year).to.eql(req_Data.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Dimas",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"let resp_age = jsonData.age\r",
							"console.log(\"resp_age = \" + resp_age)\r",
							"let resp_name = jsonData.name\r",
							"console.log(\"resp_name = \" + resp_name)\r",
							"\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"   \r",
							"    pm.expect(jsonData.age).to.eql(29);\r",
							"});\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.name).to.eql(\"Dima\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_1?name=Dima&age=29&weight=70",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "weight",
							"value": "70"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Dima&age=29&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Dima"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"    var resp_Data = pm.response.json();\r",
							"    var req_Data = pm.request.url.query.toObject();\r",
							"\r",
							"    pm.test(\"name_resp=name_req\", function () {\r",
							"   pm.expect(resp_Data.name).to.eql(req_Data.name);\r",
							"   });\r",
							"\r",
							"pm.test(\"age_resp=age_req\", function () {\r",
							"   pm.expect(resp_Data.age).to.eql(req_Data.age);\r",
							"   });\r",
							"\r",
							"pm.test(\"salary_resp=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary).to.eql(+req_Data.salary);\r",
							"});\r",
							"\r",
							"console.log(\"family from resp = \", resp_Data.family)\r",
							"\r",
							"pm.test(\"dog has property name\", function () {\r",
							"    var dog_name = pm.response.json();\r",
							"    pm.expect(dog_name.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog has property age\", function () {\r",
							"    var dog_age = pm.response.json();\r",
							"    pm.expect(dog_age.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"dog names luky\", function () {\r",
							"    var dog_name = pm.response.json();\r",
							"    pm.expect(dog_name.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"dog has property age\", function () {\r",
							"    var dog_age = pm.response.json();\r",
							"    pm.expect(dog_age.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_3?name=Dimas&age=29&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dimas"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var yolochka = pm.response.json();\r",
							"    var salary = +yolochka.salary[1]\r",
							"pm.test(\"salary2000\", function () {\r",
							"   \r",
							"    pm.expect(salary).to.eql(2000);\r",
							"});\r",
							"console.log(\"salary = \" , salary)\r",
							"\r",
							"pm.environment.set(\"salary_1\", salary);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"var req_Data = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"name_resp=name_req\", function () {\r",
							"   pm.expect(resp_Data.name).to.eql(req_Data.name);\r",
							"   });\r",
							"\r",
							"   pm.test(\"age_resp=age_req\", function () {\r",
							"   pm.expect(+resp_Data.age).to.eql(+req_Data.age);\r",
							"   });\r",
							"\r",
							"   console.log (\"salary_req = \" , req_Data.salary)\r",
							"   console.log (\"salary_resp = \" , resp_Data.salary)\r",
							"   console.log (\"salary_resp0 = \" , resp_Data.salary[0])\r",
							"   console.log (\"salary_resp1 = \" , resp_Data.salary[1])\r",
							"   console.log (\"salary_resp2 = \" , resp_Data.salary[2])\r",
							"\r",
							"   pm.test(\"salary_resp0=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary[0]).to.eql(+req_Data.salary);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_resp1=salary_req*2\", function () {\r",
							"   pm.expect(+resp_Data.salary[1]).to.eql(+req_Data.salary*2);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_resp2=salary_req*3\", function () {\r",
							"   pm.expect(+resp_Data.salary[2]).to.eql(+req_Data.salary*3);\r",
							"   });\r",
							"\r",
							"\r",
							"pm.environment.set(\"age\", req_Data.age);\r",
							"pm.environment.set(\"name\", req_Data.name);\r",
							"pm.environment.set(\"salary\", req_Data.salary);\r",
							"\r",
							"var salary_length = resp_Data.salary.length;\r",
							"for (var i = 0; i < salary_length; i++) {\r",
							"console.log(resp_Data.salary[i])\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Dimas&age=29&salary=1000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Dimas"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"    var resp_Data = pm.response.json();\r",
							"    var req_Data = request.data ;\r",
							"\r",
							"pm.test(\"resp has start_qa_salary\", function () {\r",
							"       pm.response.to.have.jsonBody(\"start_qa_salary\");\r",
							"});\r",
							"pm.test(\"resp has qa_salary_after_6_months \", function () {\r",
							"       pm.response.to.have.jsonBody(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_12_months \", function () {\r",
							"       pm.response.to.have.jsonBody(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_1.5_year \", function () {\r",
							"       pm.response.to.have.jsonBody(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has qa_salary_after_3.5_year \", function () {\r",
							"       pm.response.to.have.jsonBody(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"resp has person \", function () {\r",
							"       pm.response.to.have.jsonBody(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_salary_resp=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.start_qa_salary).to.eql(+req_Data.salary);\r",
							"   });\r",
							"\r",
							"   pm.test(\"qa_salary_after_6_months_resp=salary*2_req\", function () {\r",
							"   pm.expect(+resp_Data.qa_salary_after_6_months).to.eql(+req_Data.salary*2);\r",
							"   });\r",
							"\r",
							"   pm.test(\"qa_salary_after_12_months_resp=salary*2.7_req\", function () {\r",
							"   pm.expect(+resp_Data.qa_salary_after_12_months).to.eql(+req_Data.salary*2.7);\r",
							"   });\r",
							"\r",
							"    pm.test(\"qa_salary_after_1.5_year_resp=salary*3.3_req\", function () {\r",
							"   pm.expect(+resp_Data[\"qa_salary_after_1.5_year\"]).to.eql(+req_Data.salary*3.3);\r",
							"   });\r",
							"\r",
							"   \r",
							"\r",
							"   pm.test(\"qa_salary_after_3.5_years_resp=salary*383_req\", function () {\r",
							"   pm.expect(+resp_Data[\"qa_salary_after_3.5_years\"]).to.eql(+req_Data.salary*3.8);\r",
							"   });\r",
							"\r",
							"    pm.test(\"salary_resp=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.person.u_name[1]).to.eql(+req_Data.salary);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_5_years_resp=salary*4.2_req\", function () {\r",
							"   pm.expect(+resp_Data.person.u_salary_5_years).to.eql(+req_Data.salary*4.2);\r",
							"   });\r",
							"\r",
							"var person = resp_Data.person.u_name;\r",
							"for (i in person ) {\r",
							"console.log(i + ' = ' + person[i])\r",
							"};\r",
							"\r",
							"  \r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_Data = pm.response.json();\r",
							"var token1 = resp_Data.token;\r",
							"console.log(token1);\r",
							"\r",
							"pm.environment.set(\"token\", token1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "ert",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qwe",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"     \r",
							"    \"properties\": {\r",
							"        \"person\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"u_age\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"u_name\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": {\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"type\": \"string\"\r",
							"                            },\r",
							"                            {\r",
							"                                \"type\": \"integer\"\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"qa_salary_after_12_months\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"qa_salary_after_6_months\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"start_qa_salary\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp_Data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var salaryy = resp_Data.start_qa_salary ;\r",
							"console.log(salaryy);\r",
							"\r",
							"pm.test(\"salary_after 6 month=salary*2\", function () {\r",
							"   pm.expect(+resp_Data.qa_salary_after_6_months).to.eql(+salaryy*2);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_after 12 month=salary*2.9\", function () {\r",
							"   pm.expect(+resp_Data.qa_salary_after_12_months).to.eql(+salaryy*2.9);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_after 1.5 year=salary*4\", function () {\r",
							"   pm.expect(+resp_Data.person.u_salary_1_5_year).to.eql(+salaryy*4);\r",
							"   });\r",
							"\r",
							"   var salary1_5 = resp_Data.person.u_salary_1_5_year;\r",
							"\r",
							"\r",
							"pm.environment.set(\"usalary1_5\", salary1_5);\r",
							"\r",
							"var req = JSON.parse(request.data);\r",
							"var req_salary = req.salary;\r",
							"console.log(req_salary);\r",
							"\r",
							"pm.test(\"salary_after 6 month=salary*2\", function () {\r",
							"   pm.expect(+resp_Data.qa_salary_after_6_months).to.eql(+req_salary*2);\r",
							"   });\r",
							"\r",
							" \r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 29,\r\n    \"salary\": 1000,\r\n    \"name\": \"Dimas\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					],
					"query": [
						{
							"key": "age",
							"value": "23",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "23",
							"disabled": true
						},
						{
							"key": "name",
							"value": "\"/s34lfgbj/ert/jjd909/23863kjkWpqc1345qwe335864evny\"",
							"disabled": true
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/ert/jjd909/23863kjkWpqc1345qwe335864evny",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new_Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"\"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"anyOf\": [\r",
							"                    {\r",
							"                        \"type\": \"integer\"\r",
							"                    },\r",
							"                    {\r",
							"                        \"type\": \"string\"\r",
							"                    }\r",
							"                ]\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp_Data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var req_Data = request.data ;\r",
							"pm.test(\"salary_resp0=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary[0]).to.eql(+req_Data.salary);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_resp1=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary[1]).to.eql(+req_Data.salary*2);\r",
							"   });\r",
							"\r",
							"   pm.test(\"salary_resp2=salary_req\", function () {\r",
							"   pm.expect(+resp_Data.salary[2]).to.eql(+req_Data.salary*3);\r",
							"   });\r",
							"\r",
							"   \r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Dimas",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"    var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"daily_food\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"daily_sleep\": {\r",
							"            \"type\": \"number\"\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp_Data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"var req_Data = request.data ;\r",
							"pm.test(\"daily food=weight*0.012\", function () {\r",
							"   pm.expect(+resp_Data.daily_food).to.eql(+req_Data.weight*0.012);\r",
							"   });\r",
							"\r",
							"   pm.test(\"daily sleep=weight*2.5\", function () {\r",
							"   pm.expect(+resp_Data.daily_sleep).to.eql(+req_Data.weight*2.5);\r",
							"   });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "4",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "5",
							"type": "text"
						},
						{
							"key": "name",
							"value": "mira",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/test_pet_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"family\": {\r",
							"            \"type\": \"object\",\r",
							"            \"properties\": {\r",
							"                \"children\": {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": {\r",
							"                        \"anyOf\": [\r",
							"                            {\r",
							"                                \"type\": \"array\",\r",
							"                                \"items\": {\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"type\": \"integer\"\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            },\r",
							"                            {\r",
							"                                \"type\": \"array\",\r",
							"                                \"items\": {\r",
							"                                    \"anyOf\": [\r",
							"                                        {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        {\r",
							"                                            \"type\": \"integer\"\r",
							"                                        }\r",
							"                                    ]\r",
							"                                }\r",
							"                            }\r",
							"                        ]\r",
							"                    }\r",
							"                },\r",
							"                \"u_salary_1_5_year\": {\r",
							"                    \"type\": \"integer\"\r",
							"                }\r",
							"            }\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"salary\": {\r",
							"            \"type\": \"integer\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"var resp_Data = pm.response.json();\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(resp_Data, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"var req_Data = request.data ;\r",
							"pm.test(\"reqname=envname\", function () {\r",
							"   pm.expect(req_Data.name).to.eql(pm.environment.get(\"name\"));\r",
							"   });\r",
							"pm.test(\"respname=reqage\", function () {\r",
							"   pm.expect(+resp_Data.age).to.eql(+req_Data.age);\r",
							"   });\r",
							"\r",
							"pm.environment.get(\"name\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{usalary1_5}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": "age",
							"value": "{{age}}",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "{{usalary1_5}}",
							"disabled": true
						},
						{
							"key": "name",
							"value": "{{name}}",
							"disabled": true
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}